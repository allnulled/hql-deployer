asigno window.ExploradorDeDatos como un componente vue2 con nombre "ExploradorDeDatos" con plantilla {
  <div class="ExploradorDeDatos Component">
    <div v-if="esSeleccionable !== '0'">
      <table>
        <tbody>
          <tr>
            <td class="w_100">
              <input class="w_100" type="text" disabled="true" v-model="seleccionados" />
            </td>
            <td class="w_auto">
              <button class="w_auto" :class="{active:esta_mostrando_panel_normal}" v-on:click="alternar_panel_normal">‚ãØ</button>
            </td>
          </tr>
        </tbody>
      </table>
    </div>
    <div v-if="(esSeleccionable === '0') || esta_mostrando_panel_normal">
      <table>
        <tbody>
          <tr>
            <td>
              <button v-if="esSeleccionable === '0'" class="w_auto" v-on:click="ir_a_crear_fila">‚úö</button>
            </td>
            <td class="w_100">
              <div class="searchbox w_100">
                <input class="w_100" type="search" placeholder="Buscar" v-model="busqueda" />
                <button aria-label="search" v-on:click="buscar_texto"></button>
              </div>
            </td>
            <td>
              <button class="w_auto" :class="{active:esta_mostrando_panel_de_busqueda_avanzada}" v-on:click="alternar_panel_de_busqueda_avanzada">‚ãÆ</button>
            </td>
          </tr>
        </tbody>
      </table>
      <div v-if="esta_mostrando_panel_de_busqueda_avanzada">
        <section class="tabs">
          <menu role="tablist" aria-label="Tabs Template">
            <button role="tab" :aria-selected="esta_mostrando_panel_de_busqueda_avanzada_sobre === 'filtros'" v-on:click="() => seleccionar_panel_de_busqueda_avanzada_sobre('filtros')">·ÉÑ Filtros</button>
            <button role="tab" :aria-selected="esta_mostrando_panel_de_busqueda_avanzada_sobre === 'orden'" v-on:click="() => seleccionar_panel_de_busqueda_avanzada_sobre('orden')">‚Üì Orden</button>
            <button role="tab" :aria-selected="esta_mostrando_panel_de_busqueda_avanzada_sobre === 'paginacion'" v-on:click="() => seleccionar_panel_de_busqueda_avanzada_sobre('paginacion')">üóí P√°gina</button>
          </menu>
          <article role="tabpanel" v-if="esta_mostrando_panel_de_busqueda_avanzada_sobre === 'filtros'">
            <h5>·ÉÑ Filtros</h5>
            <div>
              <div>
                <button v-on:click="agregar_filtro">‚úö A√±adir</button>
              </div>
              <div>
                <div class="filtro_del_explorador" v-for="filtro, filtro_index in filtros" v-bind:key="'busqueda-de-' + tabla_id + '-filtro-' + filtro_index">
                  <span class="campo_del_filtro">
                    <select v-model="filtro[0]">
                      <option v-for="id_columna, id_columna_index in columnas_de_fila" v-bind:key="'busqueda-de-' + tabla_id + '-filtro-' + filtro_index + '-opcion-columna-' + id_columna_index" :value="id_columna">
                        {{ $window.utilidades.texto_humanizado(id_columna) }}
                      </option>
                    </select>
                  </span>
                  <span class="campo_del_filtro">
                    <select v-model="filtro[1]">
                      <option v-for="operador, operador_index in operadores_de_filtro" v-bind:key="'busqueda-de-' + tabla_id + '-filtro-' + filtro_index + '-opcion-columna-' + operador_index" :value="operador">
                        {{ operador }}
                      </option>
                    </select>
                  </span>
                  <span class="campo_del_filtro">
                    <input type="text" v-model="filtro[2]" />
                  </span>
                  <span class="campo_del_filtro">
                    <button class="w_auto" v-on:click="() => { filtros.splice(filtro_index, 1); $forceUpdate(true); }">Eliminar</button>
                  </span>
                </div>
              </div>
            </div>
          </article>
          <article role="tabpanel" v-if="esta_mostrando_panel_de_busqueda_avanzada_sobre === 'orden'">
            <h5>‚Üì Orden</h5>
            <div>
              <div>
                <button v-on:click="agregar_orden">‚úö A√±adir</button>
              </div>
              <div>
                <div class="orden_del_explorador" v-for="orden, orden_index in ordenes" v-bind:key="'busqueda-de-' + tabla_id + '-orden-' + orden_index">
                  <span class="campo_del_orden">
                    <select v-model="orden[0]">
                      <option v-for="id_columna, id_columna_index in columnas_de_fila" v-bind:key="'busqueda-de-' + tabla_id + '-orden-' + orden_index + '-opcion-columna-' + id_columna_index" :value="id_columna">
                        {{ $window.utilidades.texto_humanizado(id_columna) }}
                      </option>
                    </select>
                  </span>
                  <span class="campo_del_orden">
                    <select v-model="orden[1]">
                      <option value="ASC">ascendente</option>
                      <option value="DESC">descendente</option>
                    </select>
                  </span>
                  <span class="campo_del_orden">
                    <button class="w_auto" v-on:click="() => { ordenes.splice(orden_index, 1); $forceUpdate(true); }">Eliminar</button>
                  </span>
                </div>
              </div>
            </div>
          </article>
          <article role="tabpanel" v-if="esta_mostrando_panel_de_busqueda_avanzada_sobre === 'paginacion'">
            <h5>üóí Paginaci√≥n</h5>
            <div>
              <div class="paginacion_del_explorador">
                <div>P√°gina:</div>
                <span class="campo_de_la_paginacion">
                  <input type="number" v-model="pagina" v-on:keypress.enter="buscar_pagina" />
                </span>
              </div>
              <div class="paginacion_del_explorador">
                <div>√çtems:</div>
                <span class="campo_de_la_paginacion">
                  <input type="number" v-model="items" v-on:keypress.enter="buscar_pagina" />
                </span>
              </div>
              <div class="paginacion_del_explorador">
                <span class="campo_de_la_paginacion">
                  <button class="w_100" v-on:click="buscar_pagina">Ir a p√°gina</button>
                </span>
              </div>
            </div>
          </article>
        </section>
      </div>
      <div v-if="Array.isArray(filas) && filas.length">
        <div class="paginacion alta">
          <div class="display_inline_block">
            <table>
              <tbody>
                <tr>
                  <td>
                    <button class="w_auto" :disabled="pagina_actual === 1" v-on:click="buscar_pagina('¬´¬´')">
                    ¬´¬´
                    </button>
                  </td>
                  <td>
                    <button class="w_auto" :disabled="pagina_actual === 1" v-on:click="buscar_pagina('¬´')">
                    ¬´
                    </button>
                  </td>
                  <td class="w_auto">
                    P√°g. {{ pagina_actual }}
                  </td>
                  <td>
                    <button class="w_auto" :disabled="filas && (filas.length < items)" v-on:click="buscar_pagina('¬ª')">
                    ¬ª
                    </button>
                  </td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
        <div class="visor_de_tabla">
          <table class="w_100">
            <thead>
              <tr>
                <th v-if="esSeleccionable !== '0'"></th>
                <th v-for="id_columna, id_columna_index in columnas_de_fila" v-bind:key="'busqueda-de-' + tabla_id + '-columna-' + id_columna_index">
                  {{ $window.utilidades.texto_humanizado(id_columna) }}
                </th>
              </tr>
            </thead>
            <tbody>
              <tr v-for="fila, fila_index in filas" v-bind:key="'busqueda-de-' + tabla_id + '-fila-' + fila_index">
                <td v-if="esSeleccionable !== '0'" style="vertical-align: middle;">
                  <span style="vertical-align: middle;">
                    <button class="w_auto" v-on:click="() => seleccionar_fila(fila.id)">
                      <span v-if="esta_fila_seleccionada(fila.id)">
                        ‚úî
                      </span>
                      <span v-else>
                        ‚úò
                      </span>
                    </button>
                  </span>
                </td>
                <td v-for="columna, columna_index in fila" v-bind:key="'busqueda-de-' + tabla_id + '-fila-' + fila_index + '-columna-' + columna_index">
                  <span v-if="(columna_index === 'id') && (esSeleccionable === '0')">
                    <button class="boton_de_identificador_en_tabla" v-on:click="() => ir_a_fila(columna)">
                      {{ columna }}
                    </button>
                  </span>
                  <span v-else class="contenido_de_columna" :title="columna">{{ columna }}</span>
                </td>
                <td class="w_100">
                </td>
              </tr>
            </tbody>
          </table>
        </div>
        <div class="paginacion baja">
          <div class="display_inline_block">
            <table>
              <tbody>
                <tr>
                  <td>
                    <button class="w_auto" :disabled="pagina_actual === 1" v-on:click="buscar_pagina('¬´¬´')">
                    ¬´¬´
                    </button>
                  </td>
                  <td>
                    <button class="w_auto" :disabled="pagina_actual === 1" v-on:click="buscar_pagina('¬´')">
                    ¬´
                    </button>
                  </td>
                  <td class="w_auto">
                    P√°g. {{ pagina_actual }}
                  </td>
                  <td>
                    <button class="w_auto" :disabled="filas && (filas.length < items)" v-on:click="buscar_pagina('¬ª')">
                    ¬ª
                    </button>
                  </td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
      </div>
      <div v-else-if="Array.isArray(filas)">
        <span>No se obtuvieron resultados.</span>
        <span v-if="pagina !== 1">
          <span>Puedes <span class="como_link" v-on:click="ir_a_pagina_anterior">volver a p√°gina anterior</span></span>
          <span> o </span>
          <span class="como_link" v-on:click="ir_a_pagina_inicial">volver a p√°gina inicial</span><span>.</span>
        </span>
      </div>
      <div v-else>
        No se ha hecho ninguna b√∫squeda.
      </div>
    </div>
  </div>
} con l√≥gica {
  retorno {
    propiedad props como {
      root: {
        type: Object,
        required: true
      },
      esSeleccionable: {
        type: String,
        default: "0"
      },
      idDeTabla: {
        type: String,
        default: una funci√≥n donde retorno ""
      },
      seleccionPorDefecto: {
        type: [String,Number],
        default: una funci√≥n donde retorno ""
      },
      alCambiar: {
        type: Function,
        default: una funci√≥n donde retorno ""
      }
    }.
    m√©todo data() donde {
        debugo "ExploradorDeDatos.data".
      retorno this.obtener_datos({}).
    } en errores hago this.$window.$notificaciones.notificar_error(error).
    propiedad methods como {
      m√©todo agregar_filtro donde {
        debugo "ExploradorDeDatos.agregar_filtro".
        apendizo ["","=",""] en this.filtros.
      } en errores hago this.$window.$notificaciones.notificar_error(error).
      m√©todo agregar_orden donde {
        debugo "ExploradorDeDatos.agregar_orden".
        apendizo ["","ASC"] en this.ordenes.
      } en errores hago this.$window.$notificaciones.notificar_error(error).
      m√©todo alternar_panel_de_busqueda_avanzada donde {
        debugo "ExploradorDeDatos.alternar_panel_de_busqueda_avanzada".
        asigno this.esta_mostrando_panel_de_busqueda_avanzada como no this.esta_mostrando_panel_de_busqueda_avanzada.
        hago this.$forceUpdate(true).
      } en errores hago this.$window.$notificaciones.notificar_error(error).
      m√©todo alternar_panel_normal donde {
        debugo "ExploradorDeDatos.alternar_panel_normal".
        asigno this.esta_mostrando_panel_normal como no this.esta_mostrando_panel_normal.
        hago this.$forceUpdate(true).
      } en errores hago this.$window.$notificaciones.notificar_error(error).
      m√©todo as√≠ncrono buscar donde {
        debugo "ExploradorDeDatos.buscar".
        creo respuesta_busqueda como as√≠ncronamente una petici√≥n http
          con url "/api/v1/select/" + this.tabla_id
          con m√©todo "POST"
          con cuerpo {
            search: this.busqueda,
            where: this.filtros textualizado,
            order: this.ordenes textualizado,
            page: this.pagina,
            items: this.items
          }
          con cabeceras { authorization: this.root.token_de_sesion }.
        hago this.$window.utilidades.gestion_de_error_desde_respuesta(respuesta_busqueda, this).
        asigno this.pagina_actual como this.pagina.
        asigno this.filas como respuesta_busqueda.data.resultado.
        hago this.$forceUpdate(true).
      } en errores hago this.$window.$notificaciones.notificar_error(error).
      m√©todo buscar_pagina con (pagina) donde {
        debugo "ExploradorDeDatos.buscar_pagina".
        si pagina es tipo n√∫mero asigno this.pagina como pagina.
        si pagina es igual que "¬´¬´" asigno this.pagina como 1.
        si pagina es igual que "¬´" decremento this.pagina.
        si pagina es igual que "¬ª" incremento this.pagina.
        retorno this.buscar().
      } en errores hago this.$window.$notificaciones.notificar_error(error).
      m√©todo buscar_texto donde {
        debugo "ExploradorDeDatos.buscar_texto".
        asigno this.pagina como 1.
        retorno this.buscar().
      } en errores hago this.$window.$notificaciones.notificar_error(error).
      m√©todo ir_a_fila con (index_fila) donde {
        debugo "ExploradorDeDatos.ir_a_fila".
        hago this.$router.history.push(`/formulario/${this.tabla.tabla}/id/${index_fila}`).
      } en errores hago this.$window.$notificaciones.notificar_error(error).
      m√©todo ir_a_crear_fila con () donde {
        debugo "ExploradorDeDatos.ir_a_crear_fila".
        hago this.$router.history.push(`/formulario/${this.tabla.tabla}/crear`).
      } en errores hago this.$window.$notificaciones.notificar_error(error).
      m√©todo ir_a_pagina_anterior con () donde {
        debugo "ExploradorDeDatos.ir_a_pagina_anterior".
        decremento this.pagina en 1.
        retorno this.buscar().
      } en errores hago this.$window.$notificaciones.notificar_error(error).
      m√©todo ir_a_pagina_inicial con () donde {
        debugo "ExploradorDeDatos.ir_a_pagina_inicial".
        asigno this.pagina como 1.
        retorno this.buscar().
      } en errores hago this.$window.$notificaciones.notificar_error(error).
      m√©todo obtener_datos con (base o en su defecto {}) donde {
        debugo "ExploradorDeDatos.obtener_datos".
        retorno base extendido por {
          seleccionados: (this.seleccionPorDefecto + "").split(","),
          tabla: false,
          tabla_id: this.idDeTabla o this.$route.params.id_de_tabla,
          busqueda: "",
          filtros: [],
          ordenes: [],
          pagina: 1,
          pagina_actual: 1,
          items: 20,
          esta_mostrando_panel_normal: false,
          esta_mostrando_panel_de_busqueda_avanzada: false,
          esta_mostrando_panel_de_busqueda_avanzada_sobre: "filtros",
          filas: undefined,
          columnas_de_fila: undefined,
          operadores_de_filtro: ["=","!=","<","<=",">=",">","IS NULL","IS NOT NULL","LIKE","NOT LIKE","IN","NOT IN"]
        }.
      } en errores hago this.$window.$notificaciones.notificar_error(error).
      m√©todo seleccionar_panel_de_busqueda_avanzada_sobre con (subpanel) donde {
        debugo "ExploradorDeDatos.seleccionar_panel_de_busqueda_avanzada_sobre".
        asigno this.esta_mostrando_panel_de_busqueda_avanzada_sobre como subpanel.
        hago this.$forceUpdate(true).
      } en errores hago this.$window.$notificaciones.notificar_error(error).
      m√©todo seleccionar_fila con (fila_id_num) donde {
        debugo "ExploradorDeDatos.seleccionar_fila".
        creo fila_id como "" + fila_id_num.
        creo posicion como this.seleccionados.indexOf(fila_id).
        si posicion no es igual que 0-1 {
          hago this.seleccionados.splice(posicion, 1).
        } pero si posicion es igual que 0-1 {
          creo es_seleccionable_por_1 como this.esSeleccionable es igual que "1".
          si es_seleccionable_por_1 {
            creo hay_uno_seleccionado como this.seleccionados.length es mayor que 0.
            si hay_uno_seleccionado {
              asigno this.seleccionados como [].
            }.
          }.
          hago this.seleccionados.push(fila_id).
        }.
        hago this.alCambiar(this.seleccionados, this).
      } en errores hago this.$window.$notificaciones.notificar_error(error).
      m√©todo esta_fila_seleccionada con (fila_id) donde {
        debugo "ExploradorDeDatos.esta_fila_seleccionada".
        creo posicion como this.seleccionados.indexOf("" + fila_id).
        retorno posicion no es igual que 0-1.
      } en errores hago this.$window.$notificaciones.notificar_error(error).
    }.
    propiedad watch como {
      m√©todo filas con (nuevo_valor) donde {
        debugo "ExploradorDeDatos.watch.filas".
        si nuevo_valor es tipo lista y nuevo_valor.length {
          asigno this.columnas_de_fila como un conjunto de claves del objeto nuevo_valor[0].
        }.
      } en errores hago this.$window.$notificaciones.notificar_error(error).
    }.
    m√©todo as√≠ncrono mounted donde {
        debugo "ExploradorDeDatos.mounted".
      asigno this.tabla como this.$window.utilidades.busco_tabla_en_esquema(this.root.esquema, this.tabla_id).
      hago as√≠ncronamente this.buscar().
    }.
  }.
}.