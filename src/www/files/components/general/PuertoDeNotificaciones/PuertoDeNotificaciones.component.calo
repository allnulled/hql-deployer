asigno window.PuertoDeNotificaciones como un componente vue2 con nombre "PuertoDeNotificaciones" con plantilla {
  <div class="PuertoDeNotificaciones Component">
    <div class="punto_de_puerto_de_notificaciones">
			<div class="contenedor_de_puerto_de_notificaciones">
				<div class="caja_de_puerto_de_notificaciones">
          <div class="window" v-if="notificaciones.length">
            <div class="title-bar">
              <div class="title-bar-text">
                Notificaciones recientes: {{ notificaciones.length }}
              </div>
					  </div>
            <div class="window-body">
              <div class="caja_de_notificacion" v-for="notificacion, notificacion_index in notificaciones" v-bind:key="'puerto-notificaciones-notificacion-'+notificacion_index">
                <div v-on:click="() => cerrar_notificacion(notificacion)">
                {{ notificacion }}
                </div>
              </div>
					  </div>
					</div>
				</div>
			</div>
    </div>
  </div>
} con lógica {
  retorno {
    propiedad props como {
      root: {
        type: Object,
        required: true
      }
    }.
    método data() donde {
      debugo "PuertoDeNotificaciones.data".
      retorno {
        notificaciones: []
      }.
    }.
    propiedad methods como {
      método agregar_notificacion (notificacion) donde {
        debugo "PuertoDeNotificaciones.agregar_notificacion".
        si notificacion no es tipo objeto lanzo un nuevo Error("Se requiere que el parámetro «notificacion» sea tipo objeto en «PuertoDeNotificaciones.agregar_notificacion»").
        creo nueva_notificacion como Object.assign({}, notificacion, {
          id: un texto aleatorio de 10 caracteres
        }).
        apendizo nueva_notificacion en this.notificaciones.
        hago this.$forceUpdate(true).
      } en errores hago this.$window.$notificaciones.notificar_error(error).
      método cerrar_notificacion (notificacion) donde {
        debugo "PuertoDeNotificaciones.cerrar_notificacion".
        creo indice_notificacion como this.notificaciones.indexOf(notificacion).
        hago this.notificaciones.splice(indice_notificacion, 1).
        hago this.$forceUpdate(true).
      } en errores hago this.$window.$notificaciones.notificar_error(error).
      método notificar_error con (error) donde {
        debugo "PuertoDeNotificaciones.notificar_error".
        creo objeto_de_error como Object.assign({}, {
          name: error.name,
          message: error.message,
          stack: error.stack
        }).
        hago this.agregar_notificacion(objeto_de_error).
        imprimo error.
      }.
    }.
    método mounted donde {
      debugo "PuertoDeNotificaciones.mounted".
      asigno this.$window.$notificaciones como this.
    }.
  }.
}.