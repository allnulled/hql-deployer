asigno window.PaginaDePrensaParaVerNoticias como un componente vue2 con nombre "PaginaDePrensaParaVerNoticias" con plantilla {
  <div class="PaginaDePrensaParaVerNoticias Component">
    <div class="window">
      <div class="title-bar">
        <div class="title-bar-text">
          <table class="">
          <tbody>
            <tr>
            <td>
              <span class="partenon" v-on:click="() => $router.history.push('/')">üèõÔ∏è</span>
            </td>
            <td>
              <span class="">Noticias</span>
            </td>
            </tr>
          </tbody>
          </table>
        </div>
      </div>
      <div class="window-body">
        <BreadcrumbGenerico :root="root" :migas="[{texto:'Inicio',link:'/'}]"></BreadcrumbGenerico>
        <h5>Noticias</h5>
        <div class="panel_principal" style="">
          <div class="panel_de_botones_superior">
            <button v-on:click="() => ir_a_crear_noticia()">‚ûï Crear noticia</button>
          </div>
          <template v-if="noticias_de_prensa.length">
            <div class="panel_de_botones_superior">
              <table>
                <tr>
                  <td>
                    <button style="min-width: auto;" v-on:click="() => ir_a_principio_de_paginacion()"> ¬´¬´ </button>
                  </td>
                  <td>
                    <button style="min-width: auto;" v-on:click="() => ir_a_anterior_de_paginacion()"> ¬´ </button>
                  </td>
                  <td style="width: 100%; text-align: center;">P√°gina {{ pagina }}</td>
                  <td>
                    <button style="min-width: auto;" v-on:click="() => ir_a_posterior_de_paginacion()"> ¬ª </button>
                  </td>
                  <td style="display: none;">
                    <button style="min-width: auto;" v-on:click="() => ir_a_final_de_paginacion()"> ¬ª¬ª </button>
                  </td>
                </tr>
              </table>
            </div>
            <div class="lista_de_posts">
              <template v-for="noticia, noticia_index in noticias_de_prensa">
                <div class="post_en_lista" v-bind:key="'foro-noticia-noticia-' + noticia_index" v-on:click="() => ir_a_noticia(noticia.id)">
                  <div class="titulo_de_post">
                    {{ noticia.titulo }}
                  </div>
                  <div class="subtitulo_de_post">
                    {{ noticia.subtitulo }}
                  </div>
                  <div class="autor_de_post" v-if="autores_de_noticias[noticia.id_de_autor]">
                    Escrito el {{ noticia.fecha_de_creacion }} por ¬´{{ autores_de_noticias[noticia.id_de_autor].nombre }}¬ª
                  </div>
                  <div class="contenido_de_post" v-if="noticia.contenido">
                    {{ noticia.contenido.substring(0, 50) }}...
                  </div>
                  <div class="tags_de_post" v-if="noticia.tags">
                    Tags: {{ noticia.tags }}
                  </div>
                </div>
              </template>
            </div>
            <div class="panel_de_botones_superior">
              <table>
                <tr>
                  <td>
                    <button style="min-width: auto;" v-on:click="() => ir_a_principio_de_paginacion()"> ¬´¬´ </button>
                  </td>
                  <td>
                    <button style="min-width: auto;" v-on:click="() => ir_a_anterior_de_paginacion()"> ¬´ </button>
                  </td>
                  <td style="width: 100%; text-align: center;">P√°gina {{ pagina }}</td>
                  <td>
                    <button style="min-width: auto;" v-on:click="() => ir_a_posterior_de_paginacion()"> ¬ª </button>
                  </td>
                  <td style="display: none;">
                    <button style="min-width: auto;" v-on:click="() => ir_a_final_de_paginacion()"> ¬ª¬ª </button>
                  </td>
                </tr>
              </table>
            </div>
          </template>
          <div v-else>
            No hay noticias actualmente.
          </div>
        </div>
      </div>
    </div>
  </div>
} con l√≥gica {
  retorno {
    propiedad props como {
      root: {
        type: Object,
        required: true
      }
    }.
    m√©todo data donde {
      debugo "PaginaDePrensaParaVerNoticias.data".
      retorno {
        pagina: 1,
        noticias_de_prensa: [],
        autores_de_noticias: {}
      }.
    }.
    propiedad methods como {
      m√©todo as√≠ncrono ir_a_crear_noticia donde {
        hago this.$router.history.push("/prensa/crear/noticia").
      } en errores hago this.$window.$notificaciones.notificar_error(error).
      m√©todo as√≠ncrono ir_a_principio_de_paginacion donde {
        debugo "PaginaDePrensaParaVerNoticias.ir_a_principio_de_paginacion".
        asigno this.pagina como 1.
        creo resultado como as√≠ncronamente this.obtener_noticias().
        hago this.$forceUpdate(true).
      } en errores hago this.$window.$notificaciones.notificar_error(error).
      m√©todo as√≠ncrono ir_a_anterior_de_paginacion donde {
        debugo "PaginaDePrensaParaVerNoticias.ir_a_anterior_de_paginacion".
        si this.pagina es igual que 1 retorno.
        decremento this.pagina.
        creo resultado como as√≠ncronamente this.obtener_noticias().
        hago this.$forceUpdate(true).
      } en errores hago this.$window.$notificaciones.notificar_error(error).
      m√©todo as√≠ncrono ir_a_posterior_de_paginacion donde {
        debugo "PaginaDePrensaParaVerNoticias.ir_a_posterior_de_paginacion".
        incremento this.pagina.
        creo resultado como as√≠ncronamente this.obtener_noticias().
        si resultado es igual que 0 decremento this.pagina.
        hago this.$forceUpdate(true).
      } en errores hago this.$window.$notificaciones.notificar_error(error).
      m√©todo ir_a_noticia con (id_noticia) donde {
        debugo "PaginaDePrensaParaVerNoticias.ir_a_noticia".
        hago this.$router.history.push("/prensa/ver/noticia/" + id_noticia).
      } en errores hago this.$window.$notificaciones.notificar_error(error).
      m√©todo as√≠ncrono obtener_noticias donde {
        debugo "PaginaDePrensaParaVerNoticias.obtener_noticias".
        ###############################################
        creo respuesta_1 como as√≠ncronamente una petici√≥n http
          con url "/api/v1/select/Noticia_de_prensa"
          con m√©todo "POST"
          con cuerpo {
            page: this.pagina,
            order: [
              ["id", "DESC"]
            ] textualizado
          }
          con cabeceras {
            authorization: this.root.token_de_sesion
          }.
        hago this.$window.utilidades.gestion_de_error_desde_respuesta(respuesta_1, this).
        creo datos_1 como respuesta_1.data.resultado.
        si datos_1.length es igual que 0 retorno 0.
        creo ids_de_autores como datos_1.reduce(una funci√≥n con (salida, noticia) donde {
          si salida.indexOf(noticia.id_de_autor) es igual que 0-1 {
            hago salida.push(noticia.id_de_autor).
          }.
          retorno salida.
        }, []).
        ###############################################
        creo respuesta_2 como as√≠ncronamente una petici√≥n http
          con url "/api/v1/select/Usuario"
          con m√©todo "POST"
          con cuerpo {
            where: [
              ["id", "IN", ids_de_autores.join(";")]
            ] textualizado
          }
          con cabeceras {
            authorization: this.root.token_de_sesion
          }.
        hago this.$window.utilidades.gestion_de_error_desde_respuesta(respuesta_2, this).
        creo datos_2 como respuesta_2.data.resultado.
        creo datos_de_autores como datos_2.reduce(una funci√≥n con (salida, autor) donde {
          asigno salida[autor.id] como autor.
          retorno salida.
        }, {}).
        ###############################################
        asigno this.autores_de_noticias como datos_de_autores.
        asigno this.noticias_de_prensa como datos_1.
        hago this.$forceUpdate(true).
      } en errores hago this.$window.$notificaciones.notificar_error(error).
    }.
    m√©todo mounted donde {
      debugo "PaginaDePrensaParaVerNoticias.mounted".
      hago this.obtener_noticias().
    } en errores hago this.$window.$notificaciones.notificar_error(error).
  }.
}.