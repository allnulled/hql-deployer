asigno window.PaginaDePrensaParaEditarNoticia como un componente vue2 con nombre "PaginaDePrensaParaEditarNoticia" con plantilla {
  <div class="PaginaDePrensaParaEditarNoticia Component">
    <div class="window">
      <div class="title-bar">
        <div class="title-bar-text">
          <table class="">
            <tbody>
              <tr>
                <td>
                  <span class="partenon" v-on:click="() => $router.history.push('/')">üèõÔ∏è</span>
                </td>
                <td>
                  <span class="">{{ modalidad === "crear" ? "Crear" : "Editar" }} noticia</span>
                </td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
      <div v-if="root.esquema" class="window-body">
        <BreadcrumbGenerico :root="root" :migas="migas_de_pan"></BreadcrumbGenerico>
        <h5>{{ modalidad === "crear" ? "Crear" : "Editar" }} noticia</h5>
        <div class="">
          <div class="campo_de_formulario">
            <div class="enunciado_de_campo_de_formulario">T√≠tulo de la noticia:</div>
            <input style="width: 100%;" type="text" v-model="noticia_de_prensa.titulo" />
          </div>
          <div class="campo_de_formulario">
            <div class="enunciado_de_campo_de_formulario">Subt√≠tulo de la noticia: (opcional)</div>
            <input style="width: 100%;" type="text" v-model="noticia_de_prensa.subtitulo" />
          </div>
          <div class="campo_de_formulario">
            <div class="enunciado_de_campo_de_formulario">Contenido:</div>
            <textarea v-model="noticia_de_prensa.contenido" placeholder="Este campo acepta HTML."></textarea>
          </div>
          <div class="campo_de_formulario">
            <div class="enunciado_de_campo_de_formulario">Tags:</div>
            <textarea v-model="noticia_de_prensa.tags"></textarea>
          </div>
          <div class="panel_de_botones_inferior">
            <button v-if="modalidad === 'crear'" v-on:click="() => crear_noticia()">‚ûï Crear noticia</button>
            <button v-else-if="modalidad === 'editar'" v-on:click="() => guardar_noticia()">üíæ Guardar noticia</button>
          </div>
        </div>
      </div>
    </div>
  </div>
} con l√≥gica {
  retorno {
    propiedad props como {
      root: {
        type: Object,
        required: true
      },
      modalidad: {
        type: String,
        default: "crear"
      }
    }.
    m√©todo data donde {
      retorno {
        es_autor: false,
        noticia_de_prensa: {},
        migas_de_pan: cuando this.modalidad es igual que "crear" entonces [
          {
            texto:'Inicio',
            link:'/'
          },{
            texto:'Noticias',
            link:'/prensa/ver/noticias'
          }
        ] si no [
          {
            texto:'Inicio',
            link:'/'
          },{
            texto:'Noticias',
            link:'/prensa/ver/noticias'
          },{
            texto:'Noticia',
            link:'/prensa/ver/noticia/' + this.$route.params.id
          }
        ]
      }.
    }.
    propiedad methods como {
      m√©todo as√≠ncrono crear_noticia donde {
        debugo "PaginaDePrensaParaEditarNoticia.crear_noticia".
        creo respuesta_1 como as√≠ncronamente una petici√≥n http
          con url "/api/v1/insert/Noticia_de_prensa"
          con m√©todo "POST"
          con cuerpo {
            ...incluyo this.noticia_de_prensa
          }
          con cabeceras {
            authorization: this.root.token_de_sesion
          }.
        hago this.$window.utilidades.gestion_de_error_desde_respuesta(respuesta_1, this).
        imprimo respuesta_1.
        hago this.$router.history.push("/prensa/ver/noticias").
      } en errores hago this.$window.$notificaciones.notificar_error(error).
      m√©todo as√≠ncrono guardar_noticia donde {
        debugo "PaginaDePrensaParaEditarNoticia.guardar_noticia".
        creo respuesta_1 como as√≠ncronamente una petici√≥n http
          con url "/api/v1/update/Noticia_de_prensa"
          con m√©todo "POST"
          con cuerpo {
            id: this.$route.params.id,
            ...incluyo this.noticia_de_prensa
          }
          con cabeceras {
            authorization: this.root.token_de_sesion
          }.
        hago this.$window.utilidades.gestion_de_error_desde_respuesta(respuesta_1, this).
        imprimo respuesta_1.
        hago this.$router.history.push("/prensa/ver/noticia/" + this.noticia_de_prensa.id).
      } en errores hago this.$window.$notificaciones.notificar_error(error).
    }.
    m√©todo as√≠ncrono mounted donde {
      debugo "PaginaDePrensaParaEditarNoticia.mounted".
      si this.modalidad es igual que "editar" {
        creo id_de_noticia como this.$route.params.id.
        creo respuesta_1 como as√≠ncronamente una petici√≥n http
          con url "/api/v1/select/Noticia_de_prensa"
          con m√©todo "POST"
          con cuerpo {
            where: [
              [ "id", "=", id_de_noticia ]
            ] textualizado
          }
          con cabeceras {
            authorization: this.root.token_de_sesion
          }.
        hago this.$window.utilidades.gestion_de_error_desde_respuesta(respuesta_1, this).
        creo dato_1 como respuesta_1.data.resultado[0].
        si dato_1 es tipo indefinido retorno.
        asigno this.noticia_de_prensa como dato_1.
      } pero si this.modalidad es igual que "crear" {
        
      }.
    } en errores hago this.$window.$notificaciones.notificar_error(error).
  }.
}.