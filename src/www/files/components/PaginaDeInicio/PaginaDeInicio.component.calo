asigno window.PaginaDeInicio como un componente vue2 con nombre "PaginaDeInicio" con plantilla {
  <div class="PaginaDeInicio Component">
    <div class="window">
      <div class="title-bar">
        <div class="title-bar-text">
          <table class="">
            <tbody>
              <tr>
                <td>
                  <span class="partenon" v-on:click="() => $router.history.push('/')">üèõÔ∏è</span>
                </td>
                <td>
                  <span class="">Inicio</span>
                </td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
      <div v-if="root.esquema" class="window-body">
        <h5>Inicio</h5>
        <div style="text-align: center;">
          <ul class="lista_de_menu_principal" style="display: inline-block; padding: 0;">
            <li v-if="tiene_blog">
              <span class="como_link" v-on:click="() => abrir_pagina_de('/blog/ver/posts')">
                Blog
              </span>
            </li>
            <li v-if="tiene_foro">
              <span class="como_link" v-on:click="() => abrir_pagina_de('/foro/ver/temas')">
                Foro
              </span>
            </li>
            <li v-if="tiene_mensajeria">
              <span class="como_link" v-on:click="() => abrir_pagina_de('/mensajes/inicio')">
                Mensajes
              </span>
            </li>
            <li v-if="tiene_escuela">
              <span class="como_link" v-on:click="() => abrir_pagina_de('/escuela/ver/cursos')">
                Escuela
              </span>
            </li>
            <li v-if="tiene_prensa">
              <span class="como_link" v-on:click="() => abrir_pagina_de('/prensa/ver/noticias')">
                Noticias
              </span>
            </li>
            <li>
              <span class="como_link" v-on:click="() => abrir_pagina_de('/administracion')">
                Panel de administraci√≥n
              </span>
            </li>
            <li v-if="$window.utilidades.es_administrador(root.autentificacion)">
              <span class="como_link" v-on:click="() => abrir_pagina_de('/importar_exportar_datos')">
                Importar o exportar datos
              </span>
            </li>
            <li>
              <span class="como_link" v-on:click="() => abrir_pagina_de('/configuraciones')">
                Configuraciones
              </span>
            </li>
          </ul>
        </div>
      </div>
    </div>
  </div>
} con l√≥gica {
  retorno {
    propiedad props como {
      root: {
        type: Object,
        required: true
      }
    }.
    m√©todo data donde {
      debugo "PaginaDeInicio.data".
      retorno {
        tiene_blog: false,
        tiene_foro: false,
        tiene_mensajeria: false,
        tiene_escuela: false,
        tiene_prensa: false
      }.
    } en errores hago this.$window.$notificaciones.notificar_error(error).
    propiedad methods como {
      m√©todo abrir_pagina_de(pagina) donde {
        debugo "PaginaDeInicio.abrir_pagina_de".
        hago this.$router.history.push(pagina).
      } en errores hago this.$window.$notificaciones.notificar_error(error).
    }.
    m√©todo as√≠ncrono mounted donde {
      debugo "PaginaDeInicio.mounted".
      asigno this.tiene_blog como this.root.esquema.reduce(una funci√≥n con (salida, tabla) donde {
        si tabla.tabla es igual que "Post_de_blog" {
          asigno salida como true.
        }.
        retorno salida.
      }, false).
      asigno this.tiene_foro como this.root.esquema.reduce(una funci√≥n con (salida, tabla) donde {
        si tabla.tabla es igual que "Post_de_foro" {
          asigno salida como true.
        }.
        retorno salida.
      }, false).
      asigno this.tiene_mensajeria como this.root.esquema.reduce(una funci√≥n con (salida, tabla) donde {
        si tabla.tabla es igual que "Mensaje_de_mensajeria" {
          asigno salida como true.
        }.
        retorno salida.
      }, false).
      asigno this.tiene_escuela como this.root.esquema.reduce(una funci√≥n con (salida, tabla) donde {
        si tabla.tabla es igual que "Curso_de_escuela" {
          asigno salida como true.
        }.
        retorno salida.
      }, false).
      asigno this.tiene_prensa como this.root.esquema.reduce(una funci√≥n con (salida, tabla) donde {
        si tabla.tabla es igual que "Noticia_de_prensa" {
          asigno salida como true.
        }.
        retorno salida.
      }, false).
    } en errores hago this.$window.$notificaciones.notificar_error(error).
  }.
}.