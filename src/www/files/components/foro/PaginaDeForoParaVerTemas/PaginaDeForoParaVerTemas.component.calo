asigno window.PaginaDeForoParaVerTemas como un componente vue2 con nombre "PaginaDeForoParaVerTemas" con plantilla {
  <div class="PaginaDeForoParaVerTemas Component">
    <div class="window">
      <div class="title-bar">
        <div class="title-bar-text">
          <table class="">
          <tbody>
            <tr>
            <td>
              <span class="partenon" v-on:click="() => $router.history.push('/')">üèõÔ∏è</span>
            </td>
            <td>
              <span class="">Foro</span>
            </td>
            </tr>
          </tbody>
          </table>
        </div>
      </div>
      <div class="window-body">
        <BreadcrumbGenerico :root="root" :migas="[{texto:'Inicio',link:'/'}]"></BreadcrumbGenerico>
        <h5>Foro</h5>
        <div class="panel_principal" style="">
          <div class="panel_de_botones_superior" v-if="es_administrador">
            <button v-on:click="() => ir_a_crear_tema_de_foro()">‚ûï Crear tema</button>
          </div>
          <template v-if="temas_del_foro.length">
            <div class="panel_de_botones_superior">
              <table>
                <tr>
                  <td>
                    <button style="min-width: auto;" v-on:click="() => ir_a_principio_de_paginacion()"> ¬´¬´ </button>
                  </td>
                  <td>
                    <button style="min-width: auto;" v-on:click="() => ir_a_anterior_de_paginacion()"> ¬´ </button>
                  </td>
                  <td style="width: 100%; text-align: center;">P√°gina {{ pagina }}</td>
                  <td>
                    <button style="min-width: auto;" v-on:click="() => ir_a_posterior_de_paginacion()"> ¬ª </button>
                  </td>
                  <td style="display: none;">
                    <button style="min-width: auto;" v-on:click="() => ir_a_final_de_paginacion()"> ¬ª¬ª </button>
                  </td>
                </tr>
              </table>
            </div>
            <div class="lista_de_posts">
              <template v-for="tema, tema_index in temas_del_foro">
                <div class="post_en_lista" v-bind:key="'foro-tema-' + tema_index" v-on:click="() => ir_a_tema(tema.id)">
                  <div class="titulo_de_post">
                    {{ tema.titulo }}
                  </div>
                  <div class="subtitulo_de_post">
                    {{ tema.descripcion }}
                  </div>
                </div>
              </template>
            </div>
            <div class="panel_de_botones_superior">
              <table>
                <tr>
                  <td>
                    <button style="min-width: auto;" v-on:click="() => ir_a_principio_de_paginacion()"> ¬´¬´ </button>
                  </td>
                  <td>
                    <button style="min-width: auto;" v-on:click="() => ir_a_anterior_de_paginacion()"> ¬´ </button>
                  </td>
                  <td style="width: 100%; text-align: center;">P√°gina {{ pagina }}</td>
                  <td>
                    <button style="min-width: auto;" v-on:click="() => ir_a_posterior_de_paginacion()"> ¬ª </button>
                  </td>
                  <td style="display: none;">
                    <button style="min-width: auto;" v-on:click="() => ir_a_final_de_paginacion()"> ¬ª¬ª </button>
                  </td>
                </tr>
              </table>
            </div>
          </template>
          <div v-else>
            No hay temas en el foro.
          </div>
        </div>
      </div>
    </div>
  </div>
} con l√≥gica {
  retorno {
    propiedad props como {
      root: {
        type: Object,
        required: true
      }
    }.
    m√©todo data donde {
      debugo "PaginaDeForoParaVerPosts.data".
      retorno {
        pagina: 1,
        temas_del_foro: [],
        es_administrador: false
      }.
    }.
    propiedad methods como {
      m√©todo as√≠ncrono ir_a_crear_tema_de_foro donde {
        debugo "PaginaDeForoParaVerPosts.ir_a_crear_tema_de_foro".
        hago this.$router.history.push("/foro/crear/tema").
      }.
      m√©todo as√≠ncrono ir_a_principio_de_paginacion donde {
        debugo "PaginaDeForoParaVerPosts.ir_a_principio_de_paginacion".
        asigno this.pagina como 1.
        creo resultado como as√≠ncronamente this.obtener_temas().
        hago this.$forceUpdate(true).
      } en errores hago this.$window.$notificaciones.notificar_error(error).
      m√©todo as√≠ncrono ir_a_anterior_de_paginacion donde {
        debugo "PaginaDeForoParaVerPosts.ir_a_anterior_de_paginacion".
        si this.pagina es igual que 1 retorno.
        decremento this.pagina.
        creo resultado como as√≠ncronamente this.obtener_temas().
        hago this.$forceUpdate(true).
      } en errores hago this.$window.$notificaciones.notificar_error(error).
      m√©todo as√≠ncrono ir_a_posterior_de_paginacion donde {
        debugo "PaginaDeForoParaVerPosts.ir_a_posterior_de_paginacion".
        incremento this.pagina.
        creo resultado como as√≠ncronamente this.obtener_temas().
        si resultado es igual que 0 decremento this.pagina.
        hago this.$forceUpdate(true).
      } en errores hago this.$window.$notificaciones.notificar_error(error).
      m√©todo ir_a_tema con (id_tema) donde {
        debugo "PaginaDeForoParaVerPosts.ir_a_tema".
        hago this.$router.history.push(`/foro/ver/tema/${id_tema}`).
      } en errores hago this.$window.$notificaciones.notificar_error(error).
      m√©todo as√≠ncrono obtener_temas donde {
        debugo "PaginaDeForoParaVerPosts.obtener_temas".
        creo respuesta_1 como as√≠ncronamente una petici√≥n http
          con url "/api/v1/select/Tema_de_foro"
          con m√©todo "POST"
          con cuerpo {
            page: this.pagina
          }
          con cabeceras {
            authorization: this.root.token_de_sesion
          }.
        hago this.$window.utilidades.gestion_de_error_desde_respuesta(respuesta_1, this).
        creo datos_1 como respuesta_1.data.resultado.
        si datos_1.length es igual que 0 retorno 0.
        asigno this.temas_del_foro como datos_1.
      } en errores hago this.$window.$notificaciones.notificar_error(error).
      m√©todo as√≠ncrono averiguar_si_es_administrador donde {
        asigno this.es_administrador como this.root.autentificacion.permisos.reduce(una funci√≥n con (salida, permiso) donde {
          si permiso.nombre es igual que "permiso de administraci√≥n" asigno salida como true.
          retorno salida.
        }, false).
      }.
    }.
    m√©todo as√≠ncrono mounted donde {
      debugo "PaginaDeForoParaVerPosts.mounted".
      hago as√≠ncronamente this.obtener_temas().
      hago as√≠ncronamente this.averiguar_si_es_administrador().
    } en errores hago this.$window.$notificaciones.notificar_error(error).
  }.
}.