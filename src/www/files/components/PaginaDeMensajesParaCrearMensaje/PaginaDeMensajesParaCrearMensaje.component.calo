asigno window.PaginaDeMensajesParaCrearMensaje como un componente vue2 con nombre "PaginaDeMensajesParaCrearMensaje" con plantilla {
  <div class="PaginaDeMensajesParaCrearMensaje Component">
    <div class="window">
      <div class="title-bar">
        <div class="title-bar-text">
          <table class="">
            <tbody>
              <tr>
                <td>
                  <span class="partenon" v-on:click="() => $router.history.push('/')">üèõÔ∏è</span>
                </td>
                <td>
                  <span class="">Crear mensaje</span>
                </td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
      <div v-if="root.esquema" class="window-body">
        <BreadcrumbGenerico :root="root" :migas="[{texto:'Inicio',link:'/'},{texto:'Mensajes',link:'/mensajes/inicio'}]"></BreadcrumbGenerico>
        <h5>Crear mensaje</h5>
        <div class="">
          <div class="campo_de_formulario">
            <div class="enunciado_de_campo_de_formulario">
              Destinatario:
            </div>
            <ExploradorDeDatos :root="root" es-seleccionable="1" id-de-tabla="Usuario" :al-cambiar="valor => mensaje.id_de_usuario_destino = valor" />
          </div>
          <div class="campo_de_formulario">
            <div class="enunciado_de_campo_de_formulario">
              Asunto:
            </div>
            <input type="text" style="width: 100%;" v-model="mensaje.asunto" />
          </div>
          <div class="campo_de_formulario">
            <div class="enunciado_de_campo_de_formulario">
              Contenido:
            </div>
            <input type="text" style="width: 100%;" v-model="mensaje.contenido" />
          </div>
        </div>
        <div class="panel_de_botones_inferior">
          <button v-on:click="() => enviar_mensaje()">üì© Enviar</button>
        </div>
      </div>
    </div>
  </div>
} con l√≥gica {
  retorno {
    propiedad props como {
      root: {
        type: Object,
        required: true
      }
    }.
    m√©todo data donde {
      debugo "PaginaDeMensajesParaCrearMensaje.data".
      retorno {
        mensaje: {}
      }.
    } en errores hago this.$window.$notificaciones.notificar_error(error).
    propiedad methods como {
      m√©todo as√≠ncrono enviar_mensaje donde {
        creo respuesta_1 como as√≠ncronamente una petici√≥n http
          con url "/api/v1/insert/Mensaje_de_mensajeria"
          con m√©todo "POST"
          con cuerpo {
            ...incluyo this.mensaje
          }
          con cabeceras {
            authorization: this.root.token_de_sesion
          }.
        hago this.$window.utilidades.gestion_de_error_desde_respuesta(respuesta_1, this).
        hago this.$router.history.push("/mensajes/inicio").
      } en errores hago this.$window.$notificaciones.notificar_error(error).
    }.
    m√©todo as√≠ncrono mounted donde {
      
    } en errores hago this.$window.$notificaciones.notificar_error(error).
  }.
}.