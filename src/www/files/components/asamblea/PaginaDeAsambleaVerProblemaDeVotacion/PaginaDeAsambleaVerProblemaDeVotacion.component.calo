asigno window.PaginaDeAsambleaVerProblemaDeVotacion como un componente vue2 con nombre "PaginaDeAsambleaVerProblemaDeVotacion" con plantilla {
  <div class="PaginaDeAsambleaVerProblemaDeVotacion Component">
    <div class="window">
      <div class="title-bar">
        <div class="title-bar-text">
          <table class="">
            <tbody>
              <tr>
                <td>
                  <span class="partenon" v-on:click="() => $router.history.push('/')">üèõÔ∏è</span>
                </td>
                <td>
                  <span class="">Problema</span>
                </td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
      <div class="window-body" v-if="problema">
        <BreadcrumbGenerico :root="root" :migas="[{texto:'Inicio',link:'/'},{texto:'Asamblea',link:'/asamblea/inicio'},{texto:'Votaciones',link:'/asamblea/ver/votaciones'},{texto:'Votaci√≥n',link:'/asamblea/ver/votacion/' + problema.id_de_votacion},{texto:'Problemas',link:'/asamblea/ver/problemas/de/votacion/' + problema.id_de_votacion}]"></BreadcrumbGenerico>
        <h5 style="margin-bottom: 1px;">Problema</h5>
        <div class="panel_principal">
          <div class="panel_de_botones_superior">
            <button>‚ûï Crear soluci√≥n</button>
          </div>
          <div class="carta_de_datos no_hover">
            <div class="dato_nivel_1_de_carta">
              Problema ¬´{{ problema.id }}¬ª
            </div>
            <table style="width: 100%;">
              <tr>
                <td>
                  <div class="dato_nivel_4_de_carta">
                    Creada el: ¬´{{ problema.fecha_de_creacion }}¬ª
                  </div>
                </td>
              </tr>
            </table>
            <div class="dato_nivel_3_de_carta">
              <u>Estado:</u> ¬´{{ problema.estado }}¬ª
            </div>
            <div class="dato_nivel_3_de_carta">
              <u>Descripci√≥n:</u> ¬´{{ problema.descripcion }}¬ª
            </div>
            <div class="dato_nivel_3_de_carta">
              <u>Contenido:</u> ¬´{{ problema.contenido }}¬ª
            </div>
          </div>
          <div>
            <table style="width: 100%;">
              <tr>
                <td style="width: 50%;">
                  <button style="width: 100%;" v-on:click="() => votar_en_contra()">En contra</button>
                </td>
                <td style="width: 50%;">
                  <button style="width: 100%;" v-on:click="() => votar_a_favor()">A favor</button>
                </td>
              </tr>
            </table>
          </div>
        </div>
      </div>
    </div>
  </div>
} con l√≥gica {
  retorno {
    propiedad props como {
      root: {
        type: Object,
        required: true
      }
    }.
    m√©todo data donde {
      debugo "PaginaDeAsambleaVerProblemaDeVotacion.data".
      retorno {
        problema: false
      }.
    } en errores hago this.$window.$notificaciones.notificar_error(error).
    propiedad methods como {
      m√©todo as√≠ncrono obtener_problema donde {
        debugo "PaginaDeAsambleaVerProblemaDeVotacion.obtener_problema".
        creo respuesta_1 como as√≠ncronamente una petici√≥n http
          con url "/api/v1/select/Problema_de_asamblea"
          con m√©todo "POST"
          con cuerpo {
            where: [
              ["id", "=", this.$route.params.id]
            ] textualizado
          }
          con cabeceras {
            authorization: this.root.token_de_sesion
          }.
        hago this.$window.utilidades.gestion_de_error_desde_respuesta(respuesta_1, this).
        si respuesta_1.data.resultado.length no es igual que 1 lanzo un nuevo Error(`La votaci√≥n ¬´${this.$route.params.id}¬ª no fue encontrada`).
        asigno this.problema como respuesta_1.data.resultado[0].
        hago this.$forceUpdate(true).
      } en errores hago this.$window.$notificaciones.notificar_error(error).
      m√©todo as√≠ncrono votar_a_favor donde {
        @POR-HACER...
      } en errores hago this.$window.$notificaciones.notificar_error(error).
      m√©todo as√≠ncrono votar_en_contra donde {
        @POR-HACER...
      } en errores hago this.$window.$notificaciones.notificar_error(error).
    }.
    m√©todo as√≠ncrono mounted donde {
      hago as√≠ncronamente this.obtener_problema().
    }.
  }.
}.