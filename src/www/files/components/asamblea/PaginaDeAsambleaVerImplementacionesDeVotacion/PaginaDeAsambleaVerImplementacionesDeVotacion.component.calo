asigno window.PaginaDeAsambleaVerImplementacionesDeVotacion como un componente vue2 con nombre "PaginaDeAsambleaVerImplementacionesDeVotacion" con plantilla {
  <div class="PaginaDeAsambleaVerImplementacionesDeVotacion Component">
    <div class="window">
      <div class="title-bar">
        <div class="title-bar-text">
          <table class="">
            <tbody>
              <tr>
                <td>
                  <span class="partenon" v-on:click="() => $router.history.push('/')">üèõÔ∏è</span>
                </td>
                <td>
                  <span class="">Implementaciones</span>
                </td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
      <div class="window-body">
        <BreadcrumbGenerico :root="root" :migas="[{texto:'Inicio',link:'/'},{texto:'Asamblea',link:'/asamblea/inicio'},{texto:'Votaciones',link:'/asamblea/ver/votaciones'},{texto:'Votaci√≥n',link:'/asamblea/ver/votacion/' + this.$route.params.id_de_votacion}]"></BreadcrumbGenerico>
        <h5>Implementaciones</h5>
        <div class="panel_principal">
          <div v-if="implementaciones.length">
            <div class="panel_de_botones_superior">
              <table>
                <tr>
                  <td>
                    <button style="min-width: auto;" v-on:click="() => ir_a_principio_de_paginacion()"> ¬´¬´ </button>
                  </td>
                  <td>
                    <button style="min-width: auto;" v-on:click="() => ir_a_anterior_de_paginacion()"> ¬´ </button>
                  </td>
                  <td style="width: 100%; text-align: center;">P√°gina {{ pagina }}</td>
                  <td>
                    <button style="min-width: auto;" v-on:click="() => ir_a_siguiente_de_paginacion()"> ¬ª </button>
                  </td>
                  <td style="display: none;">
                    <button style="min-width: auto;" v-on:click="() => ir_a_final_de_paginacion()"> ¬ª¬ª </button>
                  </td>
                </tr>
              </table>
            </div>
            <div class="panel_de_botones_superior">
              <div class="lista_de_cartas_de_datos">
                <template v-for="implementacion, implementacion_index in implementaciones">
                  <div class="carta_de_datos" v-on:click="() => ir_a_ver_implementacion(implementacion.id)" v-bind:key="'tabla-de-implementaciones-fila-' + implementacion_index">
                    <div class="dato_nivel_1_de_carta">
                      Implementacion ¬´{{ implementacion.id }}¬ª: {{ implementacion.titulo }}
                    </div>
                    <div class="dato_nivel_4_de_carta">
                      Estado: ¬´{{ implementacion.estado }}¬ª
                    </div>
                    <div class="dato_nivel_4_de_carta">
                      Creado el ¬´{{ implementacion.fecha_de_creacion }}¬ª
                    </div>
                    <div class="dato_nivel_2_de_carta">
                      Descripci√≥n: {{ implementacion.descripcion }}
                    </div>
                    <div class="dato_nivel_3_de_carta">
                      Contenido: {{ implementacion.contenido }}
                    </div>
                  </div>
                </template>
              </div>
            </div>
            <div class="panel_de_botones_superior">
              <table>
                <tr>
                  <td>
                    <button style="min-width: auto;" v-on:click="() => ir_a_principio_de_paginacion()"> ¬´¬´ </button>
                  </td>
                  <td>
                    <button style="min-width: auto;" v-on:click="() => ir_a_anterior_de_paginacion()"> ¬´ </button>
                  </td>
                  <td style="width: 100%; text-align: center;">P√°gina {{ pagina }}</td>
                  <td>
                    <button style="min-width: auto;" v-on:click="() => ir_a_siguiente_de_paginacion()"> ¬ª </button>
                  </td>
                  <td style="display: none;">
                    <button style="min-width: auto;" v-on:click="() => ir_a_final_de_paginacion()"> ¬ª¬ª </button>
                  </td>
                </tr>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
} con l√≥gica {
  retorno {
    propiedad props como {
      root: {
        type: Object,
        required: true
      }
    }.
    m√©todo data donde {
      debugo "PaginaDeAsambleaVerImplementacionesDeVotacion.data".
      retorno {
        implementaciones: [],
        pagina: 1
      }.
    } en errores hago this.$window.$notificaciones.notificar_error(error).
    propiedad methods como {
      m√©todo as√≠ncrono ir_a_ver_implementacion con (id_implementacion) donde {
        debugo "PaginaDeAsambleaVerImplementacionesDeVotacion.ir_a_ver_implementacion".
        hago this.$router.history.push("/asamblea/ver/implementacion/" + id_implementacion).
      }.
      m√©todo as√≠ncrono obtener_datos donde {
        debugo "PaginaDeAsambleaVerImplementacionesDeVotacion.obtener_datos".
        creo respuesta_1 como as√≠ncronamente una petici√≥n http
          con url "/api/v1/select/Implementacion_de_asamblea"
          con m√©todo "POST"
          con cuerpo {
            where: [
              ["id_de_votacion", "=", this.$route.params.id_de_votacion]
            ] textualizado,
            page: this.pagina
          }
          con cabeceras {
            authorization: this.root.token_de_sesion
          }.
        hago this.$window.utilidades.gestion_de_error_desde_respuesta(respuesta_1, this).
        si respuesta_1.data.resultado.length es igual que 0 retorno 0.
        asigno this.implementaciones como respuesta_1.data.resultado.
        hago this.$forceUpdate(true).
      } en errores hago this.$window.$notificaciones.notificar_error(error).
      m√©todo as√≠ncrono ir_a_principio_de_paginacion donde {
        debugo "PaginaDeAsambleaVerImplementacionesDeVotacion.ir_a_principio_de_paginacion".
        asigno this.pagina como 1.
        creo resultado como as√≠ncronamente this.obtener_datos().
        hago this.$forceUpdate(true).
      } en errores hago this.$window.$notificaciones.notificar_error(error).
      m√©todo as√≠ncrono ir_a_anterior_de_paginacion donde {
        debugo "PaginaDeAsambleaVerImplementacionesDeVotacion.ir_a_anterior_de_paginacion".
        si this.pagina es igual que 1 retorno.
        decremento this.pagina.
        creo resultado como as√≠ncronamente this.obtener_datos().
        hago this.$forceUpdate(true).
        si resultado es igual que 0 incremento this.pagina.
      } en errores hago this.$window.$notificaciones.notificar_error(error).
      m√©todo as√≠ncrono ir_a_siguiente_de_paginacion donde {
        debugo "PaginaDeAsambleaVerImplementacionesDeVotacion.ir_a_siguiente_de_paginacion".
        incremento this.pagina.
        creo resultado como as√≠ncronamente this.obtener_datos().
        hago this.$forceUpdate(true).
        si resultado es igual que 0 decremento this.pagina.
      } en errores hago this.$window.$notificaciones.notificar_error(error).
    }.
    m√©todo as√≠ncrono mounted donde {
      hago as√≠ncronamente this.obtener_datos().
    } en errores hago this.$window.$notificaciones.notificar_error(error).
  }.
}.